quarkus.application.name=order-service
kafka.bootstrap.servers=localhost:9092
quarkus.http.port=8082

mp.messaging.incoming.words-in.auto.offset.reset=earliest
mp.messaging.incoming.words-in.topic=words
mp.messaging.outgoing.words-out.topic=words

# Configuring the incoming channel (reading from Kafka)
mp.messaging.outgoing.payments-out.connector=smallrye-kafka
mp.messaging.outgoing.payments-out.topic=payment
mp.messaging.outgoing.payments-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.payments-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.seats-out.connector=smallrye-kafka
mp.messaging.outgoing.seats-out.topic=status-update
mp.messaging.outgoing.seats-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.seats-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuring compensation
mp.messaging.incoming.allocate-in.connector=smallrye-kafka
mp.messaging.incoming.allocate-in.topic=payment-update
mp.messaging.incoming.allocate-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.allocate-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.payments-in.connector=smallrye-kafka
mp.messaging.incoming.payments-in.topic=seats
mp.messaging.incoming.payments-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.payments-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

quarkus.log.level=INFO
# PostgreSQL Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=your_username
quarkus.datasource.password= your_password
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/your_database
#
## Hibernate ORM Configuration
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=load-data.sql
quarkus.hibernate-orm.log.sql=true
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.jdbc.min-size=5